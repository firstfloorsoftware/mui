<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CefSharp</name>
    </assembly>
    <members>
        <member name="F:CefSharp.CefFileDialogMode.Open">
            <summary>
            Requires that the file exists before allowing the user to pick it.
            </summary>
        </member>
        <member name="F:CefSharp.CefFileDialogMode.OpenMultiple">
            <summary>
            Like Open, but allows picking multiple files to open.
            </summary>
        </member>
        <member name="F:CefSharp.CefFileDialogMode.Save">
            <summary>
            Allows picking a nonexistent file, and prompts to overwrite if the file already exists.
            </summary>
        </member>
        <member name="M:CefSharp.IResourceHandlerFactory.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IRequest)">
            <summary>
            Called before a resource is loaded. To specify a handler for the resource return a <see cref="T:CefSharp.ResourceHandler"/> object
            </summary>
            <param name="browser">the browser object</param>
            <param name="request">the request object - cannot be modified in this callback</param>
            <returns>To allow the resource to load normally return NULL otherwise return an instance of ResourceHandler with a valid stream</returns>
        </member>
        <member name="P:CefSharp.IResourceHandlerFactory.HasHandlers">
            <summary>
            Are there any <see cref="T:CefSharp.ResourceHandler"/>'s registered?
            </summary>
        </member>
        <member name="T:CefSharp.DependencyChecker">
            <summary>
            DependencyChecker provides a known list of Cef/CefSharp dependencies and 
            provides helper methods to check for their existance.
            </summary>
        </member>
        <member name="F:CefSharp.DependencyChecker.CefDependencies">
            <summary>
            List of Cef Dependencies
            </summary>
        </member>
        <member name="F:CefSharp.DependencyChecker.CefResources">
            <summary>
            List of Cef Resources (pack files)
            </summary>
        </member>
        <member name="F:CefSharp.DependencyChecker.CefSharpDependencies">
            <summary>
            List of CefSharp Dependencies
            </summary>
        </member>
        <member name="M:CefSharp.DependencyChecker.CheckDependencies(System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
            CheckDependencies iterates through the list of Cef and CefSharp dependencines
            relative to the path provided and returns a list of missing ones
            </summary>
            <param name="checkOptional">check to see if optional dependencies are present</param>
            <param name="packLoadingDisabled">Is loading of pack files disabled?</param>
            <param name="path">path to check for dependencies</param>
            <param name="resourcesDirPath"></param>
            <param name="localePackFile">The locale pack file e.g. <see cref="F:CefSharp.DependencyChecker.LocalesPackFile"/> </param>
            <returns>List of missing dependencies, if all present an empty List will be returned</returns>
        </member>
        <member name="M:CefSharp.DependencyChecker.AssertAllDependenciesPresent(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Checks if all Cef and CefSharp dependencies were found relative to the Executing Assembly.
            Shortcut method that calls <see cref="M:CefSharp.DependencyChecker.CheckDependencies(System.Boolean,System.Boolean,System.String,System.String,System.String)"/>, throws an Exception if not files are missing.
            </summary>
            <param name="locale">The locale, if empty then en-US will be used.</param>
            <param name="localesDirPath">The path to the locales directory, if empty locales\ will be used.</param>
            <param name="resourcesDirPath">The path to the resources directory, if empty the Executing Assembly path is used.</param>
            <param name="packLoadingDisabled">Is loading of pack files disabled?</param>
            <exception cref="T:System.Exception">Throw when not all dependencies are present</exception>
        </member>
        <member name="P:CefSharp.DependencyChecker.IsWindowsXp">
            <summary>
            IsWindowsXp - Special case for legacy XP support
            </summary>
        </member>
        <member name="M:CefSharp.Internals.IntPtrExtensions.CastToInt32(System.IntPtr)">
            <summary>
            Do an unchecked conversion from IntPtr to int
            so overflow exceptions don't get thrown.
            </summary>
            <param name="intPtr"></param>
            <returns></returns>
        </member>
        <member name="T:CefSharp.Internals.JavascriptCallbackProxy">
            <summary>
            JavascriptCallbackProxy is a wrapper class around the WCF BrowserProcess.
            When the render process detects a function as param or return type it will add a 
            <see cref="T:CefSharp.Internals.JavascriptCallback"/> that identifies the function. On the server side
            WCF Transforms <see cref="T:CefSharp.Internals.JavascriptCallback"/> into <see cref="T:CefSharp.Internals.JavascriptCallbackProxy"/>
            using the <see cref="T:CefSharp.Internals.JavascriptCallbackSurrogate"/> class.
            </summary>
        </member>
        <member name="T:CefSharp.DisposableResource">
            <summary>
            Provides base class functionality for implementing the Dispose Pattern.
            </summary>
        </member>
        <member name="M:CefSharp.DisposableResource.DisposeGuard">
            <summary>
            If this Object is disposed the Method will throw a <see cref="T:System.ObjectDisposedException"/>.
            Use this method to guard methods that are not allowed to be called after dispose was called
            </summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="P:CefSharp.DisposableResource.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed. 
            This Value Should be used for lifetime management. 
            i.e. EventHandlers may not be registered if this object is already disposed
            </summary>
            <value>
            <c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:CefSharp.IDragData.AddFile(System.String,System.String)">
            <summary>
            Add a file that is being dragged into the webview.
            </summary>
            <param name="path">File Path</param>
            <param name="displayName">Optional Display Name</param>
        </member>
        <member name="M:CefSharp.IDragData.ResetFileContents">
            <summary>
            Reset the file contents. You should do this before calling
            CefBrowserHost::DragTargetDragEnter as the web view does not allow us to
            drag in this kind of data.
            </summary>
        </member>
        <member name="M:CefSharp.IDragData.GetFileContents">
            <summary>
            Gets the Contents of the File as a <see cref="T:System.IO.Stream"/>
            For a suggested filename check the <see cref="P:CefSharp.IDragData.FileName"/> property
            </summary>
            <returns></returns>
        </member>
        <member name="P:CefSharp.IDragData.IsReadOnly">
            <summary>
            Returns true if this object is read-only.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.FileName">
            <summary>
            Return the name of the file being dragged out of the browser window.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.FileNames">
            <summary>
            Retrieve the list of file names that are being dragged into the browser window
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.FragmentBaseUrl">
            <summary>
            Return the base URL that the fragment came from. This value is used for resolving relative URLs and may be empty. 
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.FragmentHtml">
            <summary>
            Return the text/html fragment that is being dragged. 
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.FragmentText">
            <summary>
            Return the plain text fragment that is being dragged.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.LinkMetaData">
            <summary>
            Return the metadata, if any, associated with the link being dragged. 
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.LinkTitle">
            <summary>
            Return the title associated with the link being dragged.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.LinkUrl">
            <summary>
            Return the link URL that is being dragged. 
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.IsFile">
            <summary>
            Returns true if the drag data is a file.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.IsFragment">
            <summary>
            Returns true if the drag data is a text or html fragment.
            </summary>
        </member>
        <member name="P:CefSharp.IDragData.IsLink">
            <summary>
            Returns true if the drag data is a link
            </summary>
        </member>
        <member name="M:CefSharp.IFocusHandler.OnGotFocus">
            <summary>
            Called when the browser component has received focus.
            </summary>
        </member>
        <member name="M:CefSharp.IFocusHandler.OnSetFocus(CefSharp.CefFocusSource)">
            <summary>
            Called when the browser component is requesting focus.
            </summary>
            <param name="source">Indicates where the focus request is originating from.</param>
            <returns>Return false to allow the focus to be set or true to cancel setting the focus.</returns>
        </member>
        <member name="M:CefSharp.IFocusHandler.OnTakeFocus(System.Boolean)">
            <summary>
            Called when the browser component is about to lose focus.
            For instance, if focus was on the last HTML element and the user pressed the TAB key.
            </summary>
            <param name="next">Will be true if the browser is giving focus to the next component
            and false if the browser is giving focus to the previous component.</param>
        </member>
        <member name="M:CefSharp.IGeolocationHandler.OnRequestGeolocationPermission(CefSharp.IWebBrowser,System.String,System.Int32)">
            <summary>
            Called when a page requests permission to access geolocation information.
            </summary>
            <param name="browser">the browser object</param>
            <param name="requestingUrl">the URL requesting permission</param>
            <param name="requestId">the unique ID for the permission request</param>
            <returns>true to allow the request and false to deny</returns>
        </member>
        <member name="M:CefSharp.IGeolocationHandler.OnCancelGeolocationPermission(CefSharp.IWebBrowser,System.String,System.Int32)">
            <summary>
            Called when a geolocation access request is canceled.
            </summary>
            <param name="browser">the browser object</param>
            <param name="requestingUrl">the URL that originally requested permission</param>
            <param name="requestId">the unique ID for the permission request, as seen in <see cref="M:CefSharp.IGeolocationHandler.OnRequestGeolocationPermission(CefSharp.IWebBrowser,System.String,System.Int32)"/></param>
        </member>
        <member name="T:CefSharp.IsBrowserInitializedChangedEventArgs">
            <summary>
            Event arguments to the IsBrowserInitializedChanged event handler.
            </summary>
        </member>
        <member name="F:CefSharp.CefTerminationStatus.AbnormalTermination">
            
        </member>
        <member name="F:CefSharp.CefTerminationStatus.ProcessWasKilled">
            
        </member>
        <member name="F:CefSharp.CefTerminationStatus.ProcessCrashed">
            
        </member>
        <member name="T:CefSharp.IDialogHandler">
            <summary>
            Implement this interface to handle dialog events. The methods of this class will be called on the browser process UI thread.
            </summary>
        </member>
        <member name="M:CefSharp.IDialogHandler.OnFileDialog(CefSharp.IWebBrowser,CefSharp.CefFileDialogMode,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String}@)">
            <summary>
            Runs a file chooser dialog. 
            </summary>
            <example>
            To test assign something like TempFileDialogHandler (from CefSharp.Example) to DialogHandler e.g.
            <code>
            browser.DialogHandler = new TempFileDialogHandler();
            </code>
            Example URL to use for file browsing http://www.cs.tut.fi/~jkorpela/forms/file.html#example
            Simply click browse, the space next to the browse button should be populated with a randomly generated filename.
            </example>
            <param name="browser">the browser object</param>
            <param name="mode">represents the type of dialog to display</param>
            <param name="title">the title to be used for the dialog. It may be empty to show the default title ("Open" or "Save" 
            depending on the mode).</param>
            <param name="defaultFileName">the default file name to select in the dialog.</param>
            <param name="acceptTypes">a list of valid lower-cased MIME types or file extensions specified in an input element and 
            is used to restrict selectable files to such types.</param>
            <param name="result">the filename(s) the dialog returns</param>
            <returns>To display a custom dialog return true. To display the default dialog return false.</returns>
        </member>
        <member name="T:CefSharp.AddressChangedEventArgs">
            <summary>
            Event arguments to the AddressChanged event handler.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.IsValid">
            <summary>
            Returns true if this object is valid. Do not call any other methods if this function returns false.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.IsInProgress">
            <summary>
            Returns true if the download is in progress.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.IsComplete">
            <summary>
            Returns true if the download is complete.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.IsCancelled">
            <summary>
            Returns true if the download has been canceled or interrupted.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.CurrentSpeed">
            <summary>
            Returns a simple speed estimate in bytes/s.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.PercentComplete">
            <summary>
            Returns the rough percent complete or -1 if the receive total size is unknown.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.TotalBytes">
            <summary>
            Returns the total number of bytes.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.ReceivedBytes">
            <summary>
            Returns the number of received bytes.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.StartTime">
            <summary>
            Returns the time that the download started
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.EndTime">
            <summary>
            Returns the time that the download ended
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.FullPath">
            <summary>
            Returns the full path to the downloaded or downloading file.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.Id">
            <summary>
            Returns the unique identifier for this download.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.Url">
            <summary>
            Returns the URL.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.SuggestedFileName">
            <summary>
            Returns the suggested file name.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.ContentDisposition">
            <summary>
            Returns the content disposition.
            </summary>
        </member>
        <member name="P:CefSharp.DownloadItem.MimeType">
            <summary>
            Returns the mime type.
            </summary>
        </member>
        <member name="T:CefSharp.CefEventFlags">
            <summary>
            Supported event bit flags.
            </summary>
        </member>
        <member name="F:CefSharp.CefEventFlags.CommandDown">
            <summary>
            Mac OS-X command key.
            </summary>
        </member>
        <member name="T:CefSharp.Internals.TaskExtensions">
            <summary>
            TaskExtension based on the following
            https://github.com/ChadBurggraf/parallel-extensions-extras/blob/master/Extensions/TaskExtrasExtensions.cs
            https://github.com/ChadBurggraf/parallel-extensions-extras/blob/ec803e58eee28c698e44f55f49c5ad6671b1aa58/Extensions/TaskCompletionSourceExtensions.cs
            </summary>
        </member>
        <member name="M:CefSharp.Internals.TaskExtensions.WithTimeout``1(System.Threading.Tasks.Task{``0},System.TimeSpan)">
            <summary>Creates a new Task that mirrors the supplied task but that will be canceled after the specified timeout.</summary>
            <typeparam name="TResult">Specifies the type of data contained in the task.</typeparam>
            <param name="task">The task.</param>
            <param name="timeout">The timeout.</param>
            <returns>The new Task that may time out.</returns>
        </member>
        <member name="M:CefSharp.Internals.TaskExtensions.TrySetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task)">
            <summary>Attempts to transfer the result of a Task to the TaskCompletionSource.</summary>
            <typeparam name="TResult">Specifies the type of the result.</typeparam>
            <param name="resultSetter">The TaskCompletionSource.</param>
            <param name="task">The task whose completion results should be transfered.</param>
            <returns>Whether the transfer could be completed.</returns>
        </member>
        <member name="M:CefSharp.Internals.TaskExtensions.TrySetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``0})">
            <summary>Attempts to transfer the result of a Task to the TaskCompletionSource.</summary>
            <typeparam name="TResult">Specifies the type of the result.</typeparam>
            <param name="resultSetter">The TaskCompletionSource.</param>
            <param name="task">The task whose completion results should be transfered.</param>
            <returns>Whether the transfer could be completed.</returns>
        </member>
        <member name="T:CefSharp.IsLoadingChangedEventArgs">
            <summary>
            Event arguments to the IsLoadingChanged event handler.
            </summary>
        </member>
        <member name="T:CefSharp.IContextMenuParams">
            <summary>
            Wrapper for the CEF3 CefWebPluginInfo
            </summary>
        </member>
        <member name="T:CefSharp.JavascriptIgnoreAttribute">
            <summary>
            JavascriptIgnoreAttribute - Methods and Properties marked with this attribute
            will be excluded from Javascript Binding
            </summary>
        </member>
        <member name="T:CefSharp.LoadErrorEventArgs">
            <summary>
            Event arguments to the LoadError event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="P:CefSharp.LoadErrorEventArgs.FailedUrl">
            <summary>
            The URL that failed to load.
            </summary>
        </member>
        <member name="P:CefSharp.LoadErrorEventArgs.ErrorCode">
            <summary>
            The error code.
            </summary>
        </member>
        <member name="P:CefSharp.LoadErrorEventArgs.ErrorText">
            <summary>
            The error text.
            </summary>
        </member>
        <member name="T:CefSharp.FrameLoadStartEventArgs">
            <summary>
            Event arguments to the FrameLoadStart event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadStartEventArgs.Url">
            <summary>
            The URL that was loaded.
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadStartEventArgs.IsMainFrame">
            <summary>
            Is this the Main Frame
            </summary>
        </member>
        <member name="T:CefSharp.ResourceHandler">
            <summary>
            Class ResourceHandler.
            </summary>
        </member>
        <member name="M:CefSharp.ResourceHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.ResourceHandler"/> class.
            </summary>
        </member>
        <member name="M:CefSharp.ResourceHandler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CefSharp.ResourceHandler"/> class.
            </summary>
            <param name="mimeType">Type of MIME.</param>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromFileName(System.String)">
            <summary>
            Gets the resource from the file.
            </summary>
            <param name="fileName">Location of the file.</param>
            <returns>ResourceHandler.</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromFileName(System.String,System.String)">
            <summary>
            Gets the resource from the file.
            </summary>
            <param name="fileName">Location of the file.</param>
            <param name="fileExtension">The file extension.</param>
            <returns>ResourceHandler.</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromString(System.String)">
            <summary>
            Gets a <see cref="T:CefSharp.ResourceHandler"/> that represents a string.
            Defaults to <see cref="P:System.Text.Encoding.UTF8"/> and includes encoding preamble
            </summary>
            <param name="text">The text.</param>
            <returns>ResourceHandler.</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromString(System.String,System.Text.Encoding)">
            <summary>
            Gets a <see cref="T:CefSharp.ResourceHandler"/> that represents a string.
            Uses the specified encoding and includes encoding preamble.
            </summary>
            <param name="text">The html string</param>
            <param name="encoding">Character Encoding</param>
            <returns>ResourceHandler</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromString(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Gets a <see cref="T:CefSharp.ResourceHandler"/> that represents a string.
            Without a Preamble, Cef will use BrowserSettings.DefaultEncoding to load the html.
            </summary>
            <param name="text">The html string</param>
            <param name="encoding">Character Encoding</param>
            <param name="includePreamble">Include encoding preamble</param>
            <returns>ResourceHandler</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromStream(System.IO.Stream)">
            <summary>
            Gets the resource from a stream.
            </summary>
            <param name="stream">A stream of the resource.</param>
            <returns></returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromStream(System.IO.Stream,System.String)">
            <summary>
            Gets the resource from a stream.
            </summary>
            <param name="stream">A stream of the resource.</param>
            <param name="mimeType">Type of MIME.</param>
            <returns></returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.FromString(System.String,System.String)">
            <summary>
            Gets the resource from the string.
            </summary>
            <param name="text">The text.</param>
            <param name="fileExtension">The file extension.</param>
            <returns>ResourceHandler.</returns>
        </member>
        <member name="M:CefSharp.ResourceHandler.GetMimeType(System.String)">
            <summary>
            Gets the MIME type of the content.
            </summary>
            <param name="extension">The extension.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.ArgumentNullException">extension</exception>
        </member>
        <member name="P:CefSharp.ResourceHandler.MimeType">
            <summary>
            Gets or sets the type of MIME.
            </summary>
            <value>The type of MIME.</value>
        </member>
        <member name="P:CefSharp.ResourceHandler.Stream">
            <summary>
            Gets or sets the resource stream.
            </summary>
            <value>The stream.</value>
        </member>
        <member name="P:CefSharp.ResourceHandler.StatusCode">
            <summary>
            Gets or sets the http status code.
            </summary>
            <value>The http status code.</value>
        </member>
        <member name="P:CefSharp.ResourceHandler.StatusText">
            <summary>
            Gets or sets the status text.
            </summary>
            <value>The status text.</value>
        </member>
        <member name="P:CefSharp.ResourceHandler.Headers">
            <summary>
            Gets or sets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="F:CefSharp.TransitionType.LinkClicked">
            <summary>
            Source is a link click or the JavaScript window.open function. This is
            also the default value for requests like sub-resource loads that are not navigations.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.Explicit">
            <summary>
            Source is some other "explicit" navigation action such as creating a new 
            browser or using the LoadURL function. This is also the default value
            for navigations where the actual type is unknown.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.AutoSubFrame">
            <summary>
            Source is a subframe navigation. This is any content that is automatically
            loaded in a non-toplevel frame. For example, if a page consists of several
            frames containing ads, those ad URLs will have this transition type.
            The user may not even realize the content in these pages is a separate
            frame, so may not care about the URL.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ManualSubFrame">
            <summary>
            Source is a subframe navigation explicitly requested by the user that will
            generate new navigation entries in the back/forward list. These are
            probably more important than frames that were automatically loaded in
            the background because the user probably cares about the fact that this
            link was loaded.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.FormSubmit">
            <summary>
            Source is a form submission by the user. NOTE: In some situations
            submitting a form does not result in this transition type. This can happen
            if the form uses a script to submit the contents.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.Reload">
            <summary>
            Source is a "reload" of the page via the Reload function or by re-visiting
            the same URL. NOTE: This is distinct from the concept of whether a
            particular load uses "reload semantics" (i.e. bypasses cached data).
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.SourceMask">
            <summary>
            General mask defining the bits used for the source values.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.Blocked">
            <summary>
            Attempted to visit a URL but was blocked.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ForwardBack">
            <summary>
            Used the Forward or Back function to navigate among browsing history.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ChainStart">
            <summary>
            The beginning of a navigation chain.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ChainEnd">
            <summary>
            The last transition in a redirect chain.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.CliendRedirect">
            <summary>
            Redirects caused by JavaScript or a meta refresh tag on the page.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.ServerRedirect">
            <summary>
            Redirects sent from the server by HTTP headers.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.IsRedirect">
            <summary>
            Used to test whether a transition involves a redirect.
            </summary>
        </member>
        <member name="F:CefSharp.TransitionType.QualifierMask">
            <summary>
            General mask defining the bits used for the qualifiers.
            </summary>
        </member>
        <member name="T:CefSharp.NavStateChangedEventArgs">
            <summary>
            Event arguments to the NavStateChanged event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="T:CefSharp.CefFocusSource">
            <summary>
            Focus Source
            </summary>
        </member>
        <member name="F:CefSharp.CefFocusSource.FocusSourceNavigation">
            <summary>
            The source is explicit navigation via the API (LoadURL(), etc).
            </summary>
        </member>
        <member name="F:CefSharp.CefFocusSource.FocusSourceSystem">
            <summary>
            The source is a system-generated focus event.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.Function">
            <summary>
            Gets or sets a delegate which is used to invoke the method if the member is a method. 
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.Id">
            <summary>
            Identifies the <see cref="T:CefSharp.Internals.JavascriptMethod"/> for BrowserProcess to RenderProcess communication
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.ManagedName">
            <summary>
            Gets or sets the name of the managed property.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.JavascriptName">
            <summary>
            Gets or sets the name of the property in the JavaScript runtime.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptMethod.ParameterCount">
            <summary>
            Number of Params this function exepects
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObject.Id">
            <summary>
            Identifies the <see cref="T:CefSharp.Internals.JavascriptObject"/> for BrowserProcess to RenderProcess communication
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObject.Methods">
            <summary>
            Gets the methods of the <see cref="T:CefSharp.Internals.JavascriptObject"/>.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObject.Properties">
            <summary>
            Gets the properties of the <see cref="T:CefSharp.Internals.JavascriptObject"/>.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptObject.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="M:CefSharp.Internals.JavascriptObjectRepository.AnalyseObjectForBinding(CefSharp.Internals.JavascriptObject,System.Boolean,System.Boolean)">
            <summary>
            Analyse the object and generate metadata which will
            be used by the browser subprocess to interact with Cef.
            Method is called recursively
            </summary>
            <param name="obj">Javascript object</param>
            <param name="analyseMethods">Analyse methods for inclusion in metadata model</param>
            <param name="readPropertyValue">When analysis is done on a property, if true then get it's value for transmission over WCF</param>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.SetValue">
            <summary>
            Gets or sets a delegate which is used to set the property / field value in the managed object.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.GetValue">
            <summary>
            Gets or sets a delegate which is used to get the property / field value from the managed object.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.Id">
            <summary>
            Identifies the <see cref="T:CefSharp.Internals.JavascriptProperty"/> for BrowserProcess to RenderProcess communication
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.ManagedName">
            <summary>
            Gets or sets the name of the managed property.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.JavascriptName">
            <summary>
            Gets or sets the name of the property in the JavaScript runtime.
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.IsComplexType">
            <summary>
            Gets or sets if this property represents a complex type
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.IsReadOnly">
            <summary>
            Gets or sets if this property is read-only
            </summary>
        </member>
        <member name="P:CefSharp.Internals.JavascriptProperty.PropertyValue">
            <summary>
            Gets or sets the property value
            Only primative types can be stored in this property
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.SchemeName">
            <summary>
            Schema Name e.g. custom
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.DomainName">
            <summary>
            Optional Domain Name. An empty value for a standard scheme
            will cause the factory to match all domain names. The |domain_name| value
            will be ignored for non-standard schemes.
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.IsStandard">
             <summary>
             If true the scheme will be treated as a standard scheme.
             Standard schemes are subject to URL canonicalization and parsing rules as
             defined in the Common Internet Scheme Syntax RFC 1738 Section 3.1 available
             at http://www.ietf.org/rfc/rfc1738.txt
            
             In particular, the syntax for standard scheme URLs must be of the form:
             <pre>
              [scheme]://[username]:[password]@[host]:[port]/[url-path]
             </pre>
             Standard scheme URLs must have a host component that is a fully qualified
             domain name as defined in Section 3.5 of RFC 1034 [13] and Section 2.1 of
             RFC 1123. These URLs will be canonicalized to "scheme://host/path" in the
             simplest case and "scheme://username:password@host:port/path" in the most
             explicit case. For example, "scheme:host/path" and "scheme:///host/path"
             will both be canonicalized to "scheme://host/path". The origin of a
             standard scheme URL is the combination of scheme, host and port (i.e.,
             "scheme://host:port" in the most explicit case).
            
             For non-standard scheme URLs only the "scheme:" component is parsed and
             canonicalized. The remainder of the URL will be passed to the handler
             as-is. For example, "scheme:///some%20text" will remain the same.
             Non-standard scheme URLs cannot be used as a target for form submission.
             </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.IsLocal">
            <summary>
            If true the scheme will be treated as local (i.e. with the
            same security rules as those applied to "file" URLs). Normal pages cannot
            link to or access local URLs. Also, by default, local URLs can only perform
            XMLHttpRequest calls to the same URL (origin + path) that originated the
            request. To allow XMLHttpRequest calls from a local URL to other URLs with
            the same origin set the CefSettings.file_access_from_file_urls_allowed
            value to true. To allow XMLHttpRequest calls from a local URL to all
            origins set the CefSettings.universal_access_from_file_urls_allowed value
            to true.
            </summary>
        </member>
        <member name="P:CefSharp.CefCustomScheme.IsDisplayIsolated">
            <summary>
            If true the scheme will be treated as display-isolated.
            This means that pages cannot display these URLs unless they are
            from the same scheme. For example, pages in another origin cannot create
            iframes or hyperlinks to URLs with this scheme.
            </summary>
        </member>
        <member name="T:CefSharp.CefErrorCode">
            <summary>
            Lists some of the error codes that can be reported by CEF.
            
            For a complete up-to-date list, see the CEF source code
            (cef_errorcode_t in include/internal/cef_types.h)
            and the Chromium source code (net/base/net_error_list.h).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.None">
            <summary>
            No error occurred.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.IoPending">
            <summary>
            An asynchronous IO operation is not yet complete.  This usually does not
            indicate a fatal error.  Typically this error will be generated as a
            notification to wait for some external notification that the IO operation
            finally completed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Failed">
            <summary>
            A generic failure occurred.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Aborted">
            <summary>
            A request was aborted, possibly by the user.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidArgument">
            <summary>
            An argument to the function is incorrect.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidHandle">
            <summary>
            The handle or file descriptor is invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FileNotFound">
            <summary>
            The file or directory cannot be found.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TimedOut">
            <summary>
            An operation timed out.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FileTooBig">
            <summary>
            The file is too large.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Unexpected">
            <summary>
            An unexpected error. This may be caused by a programming mistake or an invalid assumption
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.AccessDenied">
            <summary>
            Permission to access a resource, other than the network, was denied.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NotImplemented">
            <summary>
            The operation failed because of unimplemented functionality.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InsufficientResources">
            <summary>
            There were not enough resources to complete the operation.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.OutOfMemory">
            <summary>
            Memory allocation failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UploadFileChanged">
            <summary>
            The file upload failed because the file's modification time was different
            from the expectation.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketNotConnected">
            <summary>
            The socket is not connected.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FileExists">
            <summary>
            The file already exists.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FilePathTooLong">
            <summary>
            The path or file name is too long.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FileNoSpace">
            <summary>
            Not enough room left on the disk.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FileVirusInfected">
            <summary>
            The file has a virus.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.BlockedByClient">
            <summary>
            The client chose to block the request.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NetworkChanged">
            <summary>
            The network changed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.BlockedByAdministrator">
            <summary>
            The request was blocked by the URL blacklist configured by the domain
            administrator.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketIsConnected">
            <summary>
            The socket is already connected.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.BlockedEnrollmentCheckPending">
            <summary>
            The request was blocked because the forced reenrollment check is still
            pending. This error can only occur on ChromeOS.
            The error can be emitted by code in chrome/browser/policy/policy_helpers.cc.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionClosed">
            <summary>
            A connection was closed (corresponding to a TCP FIN).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionReset">
            <summary>
            A connection was reset (corresponding to a TCP RST).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionRefused">
            <summary>
            A connection attempt was refused.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionAborted">
            <summary>
            A connection timed out as a result of not receiving an ACK for data sent.
            This can include a FIN packet that did not get ACK'd.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionFailed">
            <summary>
            A connection attempt failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NameNotResolved">
            <summary>
            The host name could not be resolved.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InternetDisconnected">
            <summary>
            The Internet connection has been lost.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslProtocolError">
            <summary>
            An SSL protocol error occurred.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.AddressInvalid">
            <summary>
            The IP address or port number is invalid (e.g., cannot connect to the IP address 0 or the port 0).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.AddressUnreachable">
            <summary>
            The IP address is unreachable.  This usually means that there is no route to the specified host or network.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslClientAuthCertNeeded">
            <summary>
            The server requested a client certificate for SSL client authentication.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TunnelConnectionFailed">
            <summary>
            A tunnel connection through the proxy could not be established.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NoSslVersionsEnabled">
            <summary>
            No SSL protocol versions are enabled.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslVersionOrCipherMismatch">
            <summary>
            The client and server don't support a common SSL protocol version or cipher suite.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslRenegotiationRequested">
            <summary>
            The server requested a renegotiation (rehandshake).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyAuthUnsupported">
            <summary>
            The proxy requested authentication (for tunnel establishment) with an
            unsupported method.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertErrorInSslRenegotiation">
             <summary>
             During SSL renegotiation (rehandshake), the server sent a certificate with
             an error.
            
             Note: this error is not in the -2xx range so that it won't be handled as a
             certificate error.
             </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.BadSslClientAuthCert">
            <summary>
            The SSL handshake failed because of a bad or missing client certificate.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ConnectionTimedOut">
            <summary>
            A connection attempt timed out.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.HostResolverQueueTooLarge">
            <summary>
            There are too many pending DNS resolves, so a request in the queue was
            aborted.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocksConnectionFailed">
            <summary>
            Failed establishing a connection to the SOCKS proxy server for a target host.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocksConnectionHostUnreachable">
            <summary>
            The SOCKS proxy server failed establishing connection to the target host
            because that host is unreachable.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NpnNegotiationFailed">
            <summary>
            The request to negotiate an alternate protocol failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslNoRenegotiation">
            <summary>
            The peer sent an SSL no_renegotiation alert message.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.WinsockUnexpectedWrittenBytes">
            <summary>
            Winsock sometimes reports more data written than passed.  This is probably
            due to a broken LSP.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslDecompressionFailureAlert">
            <summary>
            An SSL peer sent us a fatal decompression_failure alert. This typically
            occurs when a peer selects DEFLATE compression in the mistaken belief that
            it supports it.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslBadRecordMacAlert">
            <summary>
            An SSL peer sent us a fatal bad_record_mac alert. This has been observed
            from servers with buggy DEFLATE support.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyAuthRequested">
            <summary>
            The proxy requested authentication (for tunnel establishment).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslUnsafeNegotiation">
            <summary>
            A known TLS strict server didn't offer the renegotiation extension.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslWeakServerEphemeralDhKey">
            <summary>
            The SSL server attempted to use a weak ephemeral Diffie-Hellman key.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyConnectionFailed">
            <summary>
            Could not create a connection to the proxy server. An error occurred
            either in resolving its name, or in connecting a socket to it.
            Note that this does NOT include failures during the actual "CONNECT" method
            of an HTTP proxy.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MandatoryProxyConfigurationFailed">
            <summary>
            A mandatory proxy configuration could not be used. Currently this means
            that a mandatory PAC script could not be fetched, parsed or executed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.PreconnectMaxSocketLimit">
            <summary>
            We've hit the max socket limit for the socket pool while preconnecting.  We
            don't bother trying to preconnect more sockets.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslClientAuthPrivateKeyAccessDenied">
            <summary>
            The permission to use the SSL client certificate's private key was denied.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslClientAuthCertNoPrivateKey">
            <summary>
            The SSL client certificate has no private key.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyCertificateInvalid">
            <summary>
            The certificate presented by the HTTPS Proxy was invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NameResolutionFailed">
            <summary>
            An error occurred when trying to do a name resolution (DNS).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NetworkAccessDenied">
            <summary>
            Permission to access the network was denied. This is used to distinguish
            errors that were most likely caused by a firewall from other access denied
            errors. See also ERR_ACCESS_DENIED.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TemporarilyThrottled">
            <summary>
            The request throttler module cancelled this request to avoid DDOS.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.HttpsProxyTunnelResponse">
            <summary>
            A request to create an SSL tunnel connection through the HTTPS proxy
            received a non-200 (OK) and non-407 (Proxy Auth) response.  The response
            body might include a description of why the request failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslClientAuthSignatureFailed">
             <summary>
             We were unable to sign the CertificateVerify data of an SSL client auth
             handshake with the client certificate's private key.
            
             Possible causes for this include the user implicitly or explicitly
             denying access to the private key, the private key may not be valid for
             signing, the key may be relying on a cached handle which is no longer
             valid, or the CSP won't allow arbitrary data to be signed.
             </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MsgTooBig">
            <summary>
            The message was too large for the transport.  (for example a UDP message
            which exceeds size threshold).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdySessionAlreadyExists">
            <summary>
            A SPDY session already exists, and should be used instead of this connection.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.WsProtocolError">
            <summary>
            Websocket protocol error. Indicates that we are terminating the connection
            due to a malformed frame or other protocol violation.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProtocolSwitched">
            <summary>
            Connection was aborted for switching to another ptotocol.
            WebSocket abort SocketStream connection when alternate protocol is found.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.AddressInUse">
            <summary>
            Returned when attempting to bind an address that is already in use.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslHandshakeNotCompleted">
            <summary>
            An operation failed because the SSL handshake has not completed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslBadPeerPublicKey">
            <summary>
            SSL peer's public key is invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslPinnedKeyNotInCertChain">
            <summary>
            The certificate didn't match the built-in public key pins for the host name.
            The pins are set in net/http/transport_security_state.cc and require that
            one of a set of public keys exist on the path from the leaf to the root.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ClientAuthCertTypeUnsupported">
            <summary>
            Server request for client certificate did not contain any types we support.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.OriginBoundCertGenerationTypeMismatch">
            <summary>
            Server requested one type of cert, then requested a different type while the
            first was still being generated.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslDecryptErrorAlert">
            <summary>
            An SSL peer sent us a fatal decrypt_error alert. This typically occurs when
            a peer could not correctly verify a signature (in CertificateVerify or
            ServerKeyExchange) or validate a Finished message.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.WsThrottleQueueTooLarge">
            <summary>
            There are too many pending WebSocketJob instances, so the new job was not
            pushed to the queue.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TooManySocketStreams">
            <summary>
            There are too many active SocketStream instances, so the new connect request
            was rejected.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslServerCertChanged">
            <summary>
            The SSL server certificate changed in a renegotiation.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslInappropriateFallback">
            <summary>
            The SSL server indicated that an unnecessary TLS version fallback was
            performed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CtNoSctsVerifiedOk">
            <summary>
            Certificate Transparency: All Signed Certificate Timestamps failed to verify.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslUnrecognizedNameAlert">
            <summary>
            The SSL server sent us a fatal unrecognized_name alert.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketSetReceiveBufferSizeError">
            <summary>
            Failed to set the socket's receive buffer size as requested.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketSetSendBufferSizeError">
            <summary>
            Failed to set the socket's send buffer size as requested.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketReceiveBufferSizeUnchangeable">
            <summary>
            Failed to set the socket's receive buffer size as requested, despite success
            return code from setsockopt.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SocketSendBufferSizeUnchangeable">
            <summary>
            Failed to set the socket's send buffer size as requested, despite success
            return code from setsockopt.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SslClientAuthCertBadFormat">
            <summary>
            Failed to import a client certificate from the platform store into the SSL
            library.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertCommonNameInvalid">
            <summary>
            The server responded with a certificate whose common name did not match the host name.
            This could mean:
            1. An attacker has redirected our traffic to his server and is presenting a certificate
            for which he knows the private key.
            2. The server is misconfigured and responding with the wrong cert.
            3. The user is on a wireless network and is being redirected to the network's login page.
            4. The OS has used a DNS search suffix and the server doesn't have a certificate for the
            abbreviated name in the address bar.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertDateInvalid">
            <summary>
            The server responded with a certificate that, by our clock, appears to either not yet be valid or to have expired.
            This could mean:
            1. An attacker is presenting an old certificate for which he has managed to obtain the private key
            2. The server is misconfigured and is not presenting a valid cert.
            3. Our clock is wrong.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertAuthorityInvalid">
            <summary>
            The server responded with a certificate that is signed by an authority we don't trust.
            The could mean:
            1. An attacker has substituted the real certificate for a cert that
            contains his public key and is signed by his cousin.
            2. The server operator has a legitimate certificate from a CA we don't know about, but should trust.
            3. The server is presenting a self-signed certificate, providing no defense against active attackers (but foiling passive attackers).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertContainsErrors">
            <summary>
            The server responded with a certificate that contains errors. This error is not recoverable.
            MSDN describes this error as follows:
            "The SSL certificate contains errors."
            NOTE: It's unclear how this differs from ERR_CERT_INVALID. For consistency,
            use that code instead of this one from now on.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertNoRevocationMechanism">
            <summary>
            The certificate has no mechanism for determining if it is revoked.  In effect, this certificate cannot be revoked.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertUnableToCheckRevocation">
            <summary>
            Revocation information for the security certificate for this site is not available.
            This could mean:
            1. An attacker has compromised the private key in the certificate and is blocking our attempt to
            find out that the cert was revoked.
            2. The certificate is unrevoked, but the revocation server is busy or unavailable.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertRevoked">
            <summary>
            The server responded with a certificate has been revoked.
            We have the capability to ignore this error, but it is probably not the thing to do.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertInvalid">
            <summary>
            The server responded with a certificate that is invalid. This error is not recoverable.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertWeakSignatureAlgorithm">
            <summary>
            The server responded with a certificate that is signed using a weak
            signature algorithm.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertNonUniqueName">
            <summary>
            The host name specified in the certificate is not unique.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertWeakKey">
            <summary>
            The server responded with a certificate that contains a weak key (e.g.
            a too-small RSA key).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertNameConstraintViolation">
            <summary>
            The certificate claimed DNS names that are in violation of name constraints.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertEnd">
             <summary>
             Add new certificate error codes here.
            
             Update the value of CERT_END whenever you add a new certificate error
             code.
            
             The value immediately past the last certificate error code.
             </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidUrl">
            <summary>
            The URL is invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DisallowedUrlScheme">
            <summary>
            The scheme of the URL is disallowed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnknownUrlScheme">
            <summary>
            The scheme of the URL is unknown.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.TooManyRedirects">
            <summary>
            Attempting to load an URL resulted in too many redirects.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnsafeRedirect">
            <summary>
            Attempting to load an URL resulted in an unsafe redirect (e.g., a redirect to file:// is considered unsafe).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnsafePort">
            <summary>
            Attempting to load an URL with an unsafe port number.  These are port
            numbers that correspond to services, which are not robust to spurious input
            that may be constructed as a result of an allowed web construct (e.g., HTTP
            looks a lot like SMTP, so form submission to port 25 is denied).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidResponse">
            <summary>
            The server's response was invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidChunkedEncoding">
            <summary>
            Error in chunked transfer encoding.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MethodNotSupported">
            <summary>
            The server did not support the request method.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnexpectedProxyAuth">
            <summary>
            The response was 407 (Proxy Authentication Required), yet we did not send the request to a proxy.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.EmptyResponse">
            <summary>
            The server closed the connection without sending any data.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseHeadersTooBig">
            <summary>
            The headers section of the response is too large.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.PacStatusNotOk">
            <summary>
            The PAC requested by HTTP did not have a valid status code (non-200).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.PacScriptFailed">
            <summary>
            The evaluation of the PAC script failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.RequestRangeNotSatisfiable">
            <summary>
            The response was 416 (Requested range not satisfiable) and the server cannot
            satisfy the range requested.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MalformedIdentity">
            <summary>
            The identity used for authentication is invalid.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ContentDecodingFailed">
            <summary>
            Content decoding of the response body failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NetworkIoSuspended">
            <summary>
            An operation could not be completed because all network IO
            is suspended.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SynReplyNotReceived">
            <summary>
            FLIP data received without receiving a SYN_REPLY on the stream.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.EncodingConversionFailed">
            <summary>
            Converting the response to target encoding failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnrecognizedFtpDirectoryListingFormat">
            <summary>
            The server sent an FTP directory listing in a format we do not understand.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidSpdyStream">
            <summary>
            Attempted use of an unknown SPDY stream id.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NoSupportedProxies">
            <summary>
            There are no supported proxies in the provided list.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyProtocolError">
            <summary>
            There is a SPDY protocol error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InvalidAuthCredentials">
            <summary>
            Credentials could not be established during HTTP Authentication.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnsupportedAuthScheme">
            <summary>
            An HTTP Authentication scheme was tried which is not supported on this
            machine.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.EncodingDetectionFailed">
            <summary>
            Detecting the encoding of the response failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MissingAuthCredentials">
            <summary>
            (GSSAPI) No Kerberos credentials were available during HTTP Authentication.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UnexpectedSecurityLibraryStatus">
            <summary>
            An unexpected, but documented, SSPI or GSSAPI status code was returned.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.MisconfiguredAuthEnvironment">
            <summary>
            The environment was not set up correctly for authentication (for
            example, no KDC could be found or the principal is unknown.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.UndocumentedSecurityLibraryStatus">
            <summary>
            An undocumented SSPI or GSSAPI status code was returned.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseBodyTooBigToDrain">
            <summary>
            The HTTP response was too big to drain.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseHeadersMultipleContentLength">
            <summary>
            The HTTP response contained multiple distinct Content-Length headers.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.IncompleteSpdyHeaders">
            <summary>
            SPDY Headers have been received, but not all of them - status or version
            headers are missing, so we're expecting additional frames to complete them.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.PacNotInDhcp">
            <summary>
            No PAC URL configuration could be retrieved from DHCP. This can indicate
            either a failure to retrieve the DHCP configuration, or that there was no
            PAC URL configured in DHCP.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseHeadersMultipleContentDisposition">
            <summary>
            The HTTP response contained multiple Content-Disposition headers.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseHeadersMultipleLocation">
            <summary>
            The HTTP response contained multiple Location headers.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyServerRefusedStream">
            <summary>
            SPDY server refused the stream. Client should retry. This should never be a
            user-visible error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyPingFailed">
            <summary>
            SPDY server didn't respond to the PING message.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ContentLengthMismatch">
            <summary>
            The HTTP response body transferred fewer bytes than were advertised by the
            Content-Length header when the connection is closed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.IncompleteChunkedEncoding">
            <summary>
            The HTTP response body is transferred with Chunked-Encoding, but the
            terminating zero-length chunk was never sent when the connection is closed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.QuicProtocolError">
            <summary>
            There is a QUIC protocol error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ResponseHeadersTruncated">
            <summary>
            The HTTP headers were truncated by an EOF.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.QuicHandshakeFailed">
            <summary>
            The QUIC crytpo handshake failed.  This means that the server was unable
            to read any requests sent, so they may be resent.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.RequestForSecureResourceOverInsecureQuic">
            <summary>
            An https resource was requested over an insecure QUIC connection.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyInadequateTransportSecurity">
            <summary>
            Transport security is inadequate for the SPDY version.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyFlowControlError">
            <summary>
            The peer violated SPDY flow control.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyFrameSizeError">
            <summary>
            The peer sent an improperly sized SPDY frame.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SpdyCompressionError">
            <summary>
            Decoding or encoding of compressed SPDY headers failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ProxyAuthRequestedWithNoConnection">
            <summary>
            Proxy Auth Requested without a valid Client Socket Handle.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheMiss">
            <summary>
            The cache does not have the requested entry.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheReadFailure">
            <summary>
            Unable to read from the disk cache.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheWriteFailure">
            <summary>
            Unable to write to the disk cache.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheOperationNotSupported">
            <summary>
            The operation is not supported for this entry.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheOpenFailure">
            <summary>
            The disk cache is unable to open this entry.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheCreateFailure">
            <summary>
            The disk cache is unable to create this entry.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheRace">
            <summary>
            Multiple transactions are racing to create disk cache entries. This is an
            internal error returned from the HttpCache to the HttpCacheTransaction that
            tells the transaction to restart the entry-creation logic because the state
            of the cache has changed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheChecksumReadFailure">
            <summary>
            The cache was unable to read a checksum record on an entry. This can be
            returned from attempts to read from the cache. It is an internal error,
            returned by the SimpleCache backend, but not by any URLRequest methods
            or members.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheChecksumMismatch">
            <summary>
            The cache found an entry with an invalid checksum. This can be returned from
            attempts to read from the cache. It is an internal error, returned by the
            SimpleCache backend, but not by any URLRequest methods or members.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CacheLockTimeout">
            <summary>
            Internal error code for the HTTP cache. The cache lock timeout has fired.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.InsecureResponse">
            <summary>
            The server's response was insecure (e.g. there was a cert error).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.NoPrivateKeyForCert">
            <summary>
            The server responded to a &lt;keygen&gt; with a generated client cert that we
            don't have the matching private key for.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.AddUserCertFailed">
            <summary>
            An error adding to the OS certificate database (e.g. OS X Keychain).
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpFailed">
            <summary>
            A generic error for failed FTP control connection command.
            If possible, please use or add a more specific error code.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpServiceUnavailable">
            <summary>
            The server cannot fulfill the request at this point. This is a temporary
            error.
            FTP response code 421.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpTransferAborted">
            <summary>
            The server has aborted the transfer.
            FTP response code 426.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpFileBusy">
            <summary>
            The file is busy, or some other temporary error condition on opening
            the file.
            FTP response code 450.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpSyntaxError">
            <summary>
            Server rejected our command because of syntax errors.
            FTP response codes 500, 501.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpCommandNotSupported">
            <summary>
            Server does not support the command we issued.
            FTP response codes 502, 504.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.FtpBadCommandSequence">
            <summary>
            Server rejected our command because we didn't issue the commands in right
            order.
            FTP response code 503.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Pkcs12ImportBadPassword">
            <summary>
            PKCS #12 import failed due to incorrect password.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Pkcs12ImportFailed">
            <summary>
            PKCS #12 import failed due to other error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ImportCaCertNotCa">
            <summary>
            CA import failed - not a CA cert.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ImportCertAlreadyExists">
            <summary>
            Import failed - certificate already exists in database.
            Note it's a little weird this is an error but reimporting a PKCS12 is ok
            (no-op).  That's how Mozilla does it, though.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ImportCaCertFailed">
            <summary>
            CA import failed due to some other error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ImportServerCertFailed">
            <summary>
            Server certificate import failed due to some internal error.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Pkcs12ImportInvalidMac">
            <summary>
            PKCS #12 import failed due to invalid MAC.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Pkcs12ImportInvalidFile">
            <summary>
            PKCS #12 import failed due to invalid/corrupt file.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.Pkcs12ImportUnsupported">
            <summary>
            PKCS #12 import failed due to unsupported features.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.KeyGenerationFailed">
            <summary>
            Key generation failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.OriginBoundCertGenerationFailed">
            <summary>
            Server-bound certificate generation failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.PrivateKeyExportFailed">
            <summary>
            Failure to export private key.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.SelfSignedCertGenerationFailed">
            <summary>
            Self-signed certificate generation failed.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.CertDatabaseChanged">
            <summary>
            The certificate database changed in some way.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.ChannelIdImportFailed">
            <summary>
            Failure to import Channel ID.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsMalformedResponse">
            <summary>
            DNS resolver received a malformed response.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsServerRequiresTcp">
            <summary>
            DNS server requires TCP
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsServerFailed">
            <summary>
            DNS server failed.  This error is returned for all of the following
            error conditions:
            1 - Format error - The name server was unable to interpret the query.
            2 - Server failure - The name server was unable to process this query
                due to a problem with the name server.
            4 - Not Implemented - The name server does not support the requested
                kind of query.
            5 - Refused - The name server refuses to perform the specified
                operation for policy reasons.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsTimedOut">
            <summary>
            DNS transaction timed out.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsCacheMiss">
            <summary>
            The entry was not found in cache, for cache-only lookups.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsSearchEmpty">
            <summary>
            Suffix search list rules prevent resolution of the given host name.
            </summary>
        </member>
        <member name="F:CefSharp.CefErrorCode.DnsSortError">
            <summary>
            Failed to sort addresses according to RFC3484.
            </summary>
        </member>
        <member name="T:CefSharp.ConsoleMessageEventArgs">
            <summary>
            Event arguments to the ConsoleMessage event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="P:CefSharp.ConsoleMessageEventArgs.Message">
            <summary>
            The message text of the console message.
            </summary>
        </member>
        <member name="P:CefSharp.ConsoleMessageEventArgs.Source">
            <summary>
            The source of the console message.
            </summary>
        </member>
        <member name="P:CefSharp.ConsoleMessageEventArgs.Line">
            <summary>
            The line number that generated the console message.
            </summary>
        </member>
        <member name="M:CefSharp.IDownloadHandler.OnBeforeDownload(CefSharp.DownloadItem,System.String@,System.Boolean@)">
            <summary>
            Called before a download begins.
            </summary>
            <param name="downloadItem">Represents the file being downloaded.</param>
            <param name="downloadPath">Path where the file will be saved if <see cref="!:showDialog"/> is False.</param>
            <param name="showDialog">Display a dialog allowing the user to specify a custom path and filename.</param>
            <returns>Return True to continue the download otherwise return False to cancel the download</returns>
        </member>
        <member name="M:CefSharp.IDownloadHandler.OnDownloadUpdated(CefSharp.DownloadItem)">
            <summary>
            Called when a download's status or progress information has been updated. This may be called multiple times before and after <see cref="M:CefSharp.IDownloadHandler.OnBeforeDownload(CefSharp.DownloadItem,System.String@,System.Boolean@)"/>.
            </summary>
            <param name="downloadItem">Represents the file being downloaded.</param>
            <returns>Return True to cancel, otherwise False to allow the download to continue.</returns>
        </member>
        <member name="M:CefSharp.IJsDialogHandler.OnJSBeforeUnload(CefSharp.IWebBrowser,System.String,System.Boolean,System.Boolean@)">
            <summary>
            When leaving the page a Javascript dialog is displayed asking for user confirmation.
            Returning True allows you to implement a custom dialog or programatically handle.
            To cancel the unload return True and set allowUnload to False.
            </summary>
            <param name="browser">the browser object</param>
            <param name="message">message (optional)</param>
            <param name="isReload">indicates a page reload</param>
            <param name="allowUnload">True to allow unload, otherwise False</param>
            <returns>Return false to use the default dialog implementation otherwise return true to handle</returns>
        </member>
        <member name="M:CefSharp.ILifeSpanHandler.OnBeforePopup(CefSharp.IWebBrowser,System.String,System.String,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Called before a popup window is created.
            </summary>
            <param name="browser">The IWebBrowser control this request is for.</param>
            <param name="sourceUrl">The URL of the HTML frame that launched this popup.</param>
            <param name="targetUrl">The URL of the popup content. (This may be empty/null)</param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
            <remarks>
            CEF documentation:
            
            Called on the IO thread before a new popup window is created. The |browser|
            and |frame| parameters represent the source of the popup request. The
            |target_url| and |target_frame_name| values may be empty if none were
            specified with the request. The |popupFeatures| structure contains
            information about the requested popup window. To allow creation of the
            popup window optionally modify |windowInfo|, |client|, |settings| and
            |no_javascript_access| and return false. To cancel creation of the popup
            window return true. The |client| and |settings| values will default to the
            source browser's values. The |no_javascript_access| value indicates whether
            the new browser window should be scriptable and in the same process as the
            source browser.
            </remarks>
        </member>
        <member name="M:CefSharp.ILifeSpanHandler.OnBeforeClose(CefSharp.IWebBrowser)">
            <summary>
            Called before a CefBrowser window (either the main browser for IWebBrowser, 
            or one of its children)
            </summary>
            <param name="browser"></param>
        </member>
        <member name="M:CefSharp.IWebBrowser.Load(System.String)">
            <summary>
            Loads the specified URL.
            </summary>
            <param name="url">The URL to be loaded.</param>
        </member>
        <member name="M:CefSharp.IWebBrowser.LoadHtml(System.String,System.String)">
            <summary>
            Registers and loads a <see cref="T:CefSharp.ResourceHandler"/> that represents the HTML content.
            </summary>
            <remarks>
            `Cef` Native `LoadHtml` is unpredictable and only works sometimes, this method wraps
            the provided HTML in a <see cref="T:CefSharp.ResourceHandler"/> and loads the provided url using
            the <see cref="M:CefSharp.IWebBrowser.Load(System.String)"/> method.
            Defaults to using <see cref="P:System.Text.Encoding.UTF8"/> for character encoding 
            The url must start with a valid schema, other uri's such as about:blank are invalid
            A valid example looks like http://test/page
            </remarks>
            <param name="html">The HTML content.</param>
            <param name="url">The URL that will be treated as the address of the content.</param>
        </member>
        <member name="M:CefSharp.IWebBrowser.LoadHtml(System.String,System.String,System.Text.Encoding)">
            <summary>
            Registers and loads a <see cref="T:CefSharp.ResourceHandler"/> that represents the HTML content.
            </summary>
            <remarks>
            `Cef` Native `LoadHtml` is unpredictable and only works sometimes, this method wraps
            the provided HTML in a <see cref="T:CefSharp.ResourceHandler"/> and loads the provided url using
            the <see cref="M:CefSharp.IWebBrowser.Load(System.String)"/> method.
            </remarks>
            <param name="html">The HTML content.</param>
            <param name="url">The URL that will be treated as the address of the content.</param>
            <param name="encoding">Character Encoding</param>
        </member>
        <member name="M:CefSharp.IWebBrowser.RegisterJsObject(System.String,System.Object)">
            <summary>
            Registers a Javascript object in this specific browser instance.
            </summary>
            <param name="name">The name of the object. (e.g. "foo", if you want the object to be accessible as window.foo).</param>
            <param name="objectToBind">The object to be made accessible to Javascript.</param>
        </member>
        <member name="M:CefSharp.IWebBrowser.ExecuteScriptAsync(System.String)">
            <summary>
            Execute some Javascript code in the context of this WebBrowser. As the method name implies, the script will be
            executed asynchronously, and the method therefore returns before the script has actually been executed.
            </summary>
            <param name="script">The Javascript code that should be executed.</param>
        </member>
        <member name="M:CefSharp.IWebBrowser.EvaluateScriptAsync(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Execute some Javascript code in the context of this WebBrowser, and return the result of the evaluation
            in an Async fashion
            </summary>
            <param name="script">The Javascript code that should be executed.</param>
            <param name="timeout">The timeout after which the Javascript code execution should be aborted.</param>
            /// <returns>A Task that can be awaited to perform the script execution</returns>
        </member>
        <member name="M:CefSharp.IWebBrowser.Find(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Search for text within the current page.
            </summary>
            <param name="identifier">Can be used in can conjunction with searchText to have multiple
            searches running simultaneously.</param>
            <param name="searchText">search text</param>
            <param name="forward">indicates whether to search forward or backward within the page.</param>
            <param name="matchCase">indicates whether the search should be case-sensitive. </param>
            <param name="findNext">indicates whether this is the first request or a follow-up.</param>
        </member>
        <member name="M:CefSharp.IWebBrowser.StopFinding(System.Boolean)">
            <summary>
            Cancel all searches that are currently going on.
            </summary>
            <param name="clearSelection">clear the current search selection</param>
        </member>
        <member name="M:CefSharp.IWebBrowser.Back">
            <summary>
            Navigates back, must check <see cref="P:CefSharp.IWebBrowser.CanGoBack"/> before calling this method.
            </summary>
        </member>
        <member name="M:CefSharp.IWebBrowser.Forward">
            <summary>
            Navigates forward, must check <see cref="P:CefSharp.IWebBrowser.CanGoForward"/> before calling this method.
            </summary>
        </member>
        <member name="M:CefSharp.IWebBrowser.Stop">
            <summary>
            Stops loading the current page.
            </summary>
        </member>
        <member name="M:CefSharp.IWebBrowser.GetSourceAsync">
            <summary>
            Retrieve the main frame's HTML source using a <see cref="T:System.Threading.Tasks.Task`1"/>.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/> that when executed returns the frame source as a string</returns>
        </member>
        <member name="M:CefSharp.IWebBrowser.GetTextAsync">
            <summary>
            Retrieve the main frame's display text using a <see cref="T:System.Threading.Tasks.Task`1"/>.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/> that when executed returns the frame display text as a string.</returns>
        </member>
        <member name="M:CefSharp.IWebBrowser.ViewSource">
            <summary>
            Opens up a new program window (using the default text editor) where the source code of the currently displayed web
            page is shown.
            </summary>
        </member>
        <member name="M:CefSharp.IWebBrowser.Focus">
            <summary>
            Attempts to give focus to the IWpfWebBrowser control.
            </summary>
            <returns><c>true</c> if keyboard focus and logical focus were set to this element; <c>false</c> if only logical focus
            was set to this element, or if the call to this method did not force the focus to change.</returns>
        </member>
        <member name="M:CefSharp.IWebBrowser.Reload">
            <summary>
            Reloads the page being displayed. This method will use data from the browser's cache, if available.
            </summary>
        </member>
        <member name="M:CefSharp.IWebBrowser.Reload(System.Boolean)">
            <summary>
            Reloads the page being displayed, optionally ignoring the cache (which means the whole page including all .css, .js
            etc. resources will be re-fetched).
            </summary>
            <param name="ignoreCache"><c>true</c> A reload is performed ignoring browser cache; <c>false</c> A reload is
            performed using files from the browser cache, if available.</param>
        </member>
        <member name="M:CefSharp.IWebBrowser.Print">
            <summary>
            Opens a Print Dialog which if used (can be user cancelled) will print the browser contents.
            </summary>
        </member>
        <member name="M:CefSharp.IWebBrowser.ShowDevTools">
            <summary>
            Open developer tools in its own window. 
            </summary>
        </member>
        <member name="M:CefSharp.IWebBrowser.CloseDevTools">
            <summary>
            Explicitly close the developer tools window if one exists for this browser instance.
            </summary>
        </member>
        <member name="M:CefSharp.IWebBrowser.ReplaceMisspelling(System.String)">
            <summary>
            If a misspelled word is currently selected in an editable node calling
            this method will replace it with the specified word. 
            </summary>
            <param name="word">The new word that will replace the currently selected word.</param>
        </member>
        <member name="M:CefSharp.IWebBrowser.AddWordToDictionary(System.String)">
            <summary>
            Add the specified word to the spelling dictionary.
            </summary>
            <param name="word">The new word that will be added to the dictionary.</param>
        </member>
        <member name="M:CefSharp.IWebBrowser.SendMouseWheelEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Send a mouse wheel event to the browser.
            </summary>
            <param name="x">X-Axis coordinate relative to the upper-left corner of the view.</param>
            <param name="y">Y-Axis coordinate relative to the upper-left corner of the view.</param>
            <param name="deltaX">Movement delta for X direction.</param>
            <param name="deltaY">movement delta for Y direction.</param>
        </member>
        <member name="E:CefSharp.IWebBrowser.ConsoleMessage">
            <summary>
            Event handler for receiving Javascript console messages being sent from web pages.
            </summary>
        </member>
        <member name="E:CefSharp.IWebBrowser.StatusMessage">
            <summary>
            Event handler for changes to the status message.
            </summary>
        </member>
        <member name="E:CefSharp.IWebBrowser.FrameLoadStart">
            <summary>
            Event handler that will get called when the browser begins loading a frame. Multiple frames may be loading at the same
            time. Sub-frames may start or continue loading after the main frame load has ended. This method may not be called for a
            particular frame if the load request for that frame fails. For notification of overall browser load status use
            OnLoadingStateChange instead.
            </summary>
        </member>
        <member name="E:CefSharp.IWebBrowser.FrameLoadEnd">
            <summary>
            Event handler that will get called when the browser is done loading a frame. Multiple frames may be loading at the same
            time. Sub-frames may start or continue loading after the main frame load has ended. This method will always be called
            for all frames irrespective of whether the request completes successfully.
            </summary>
        </member>
        <member name="E:CefSharp.IWebBrowser.LoadError">
            <summary>
            Event handler that will get called when the resource load for a navigation fails or is canceled.
            </summary>
        </member>
        <member name="E:CefSharp.IWebBrowser.NavStateChanged">
            <summary>
            Event handler that will get called when the Navigation state has changed (Maps to OnLoadingStateChange in Cef).
            This event will be fired twice. Once when loading is initiated either programmatically or
            by user action, and once when loading is terminated due to completion, cancellation of failure. 
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.DialogHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDialogHandler"/> and assign to handle dialog events.
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.RequestHandler">
            <summary>
            Implement <see cref="T:CefSharp.IRequestHandler"/> and assign to handle events related to browser requests.
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.LifeSpanHandler">
            <summary>
            Implement <see cref="T:CefSharp.ILifeSpanHandler"/> and assign to handle events related to popups.
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.KeyboardHandler">
            <summary>
            Implement <see cref="T:CefSharp.IKeyboardHandler"/> and assign to handle events related to key press.
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.JsDialogHandler">
            <summary>
            Implement <see cref="T:CefSharp.IJsDialogHandler"/> and assign to handle events related to JavaScript Dialogs.
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.DragHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDragHandler"/> and assign to handle events related to dragging.
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.DownloadHandler">
            <summary>
            Implement <see cref="T:CefSharp.IDownloadHandler"/> and assign to handle events related to downloading files.
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.MenuHandler">
            <summary>
            Implement <see cref="T:CefSharp.IMenuHandler"/> and assign to handle events related to the browser context menu
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.FocusHandler">
            <summary>
            Implement <see cref="T:CefSharp.IFocusHandler"/> and assign to handle events related to the browser component's focus
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.ResourceHandlerFactory">
            <summary>
            Implement <see cref="T:CefSharp.IResourceHandlerFactory"/> and control the loading of resources
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.GeolocationHandler">
            <summary>
            Implement <see cref="T:CefSharp.IGeolocationHandler"/> and assign to handle requests for permission to use geolocation.
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.IsBrowserInitialized">
            <summary>
            A flag that indicates whether the WebBrowser is initialized (true) or not (false).
            </summary>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.IsLoading">
            <summary>
            A flag that indicates whether the control is currently loading one or more web pages (true) or not (false).
            </summary>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.CanGoBack">
            <summary>
            A flag that indicates whether the state of the control current supports the GoBack action (true) or not (false).
            </summary>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.CanGoForward">
            <summary>
            A flag that indicates whether the state of the control currently supports the GoForward action (true) or not (false).
            </summary>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.CanReload">
            <summary>
            A flag that indicates whether the state of the control currently supports the Reload action (true) or not (false).
            </summary>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.Address">
            <summary>
            The address (URL) which the browser control is currently displaying.
            Will automatically be updated as the user navigates to another page (e.g. by clicking on a link).
            </summary>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.Title">
            <summary>
            The title of the web page being currently displayed.
            </summary>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="P:CefSharp.IWebBrowser.TooltipText">
            <summary>
            The text that will be displayed as a ToolTip
            </summary>
        </member>
        <member name="P:CefSharp.IWebBrowser.ZoomLevel">
            <summary>
            The zoom level at which the browser control is currently displaying. Can be set to 0 to clear the zoom level (resets to
            default zoom level).
            </summary>
            <remarks>In the WPF control, this property is implemented as a Dependency Property and fully supports data
            binding.</remarks>
        </member>
        <member name="T:CefSharp.WebPluginInfo">
            <summary>
            CefWebPluginInfo
            </summary>
        </member>
        <member name="P:CefSharp.IRequest.TransitionType">
            <summary>
            Get the transition type for this request.
            Applies to requests that represent a main frame or sub-frame navigation.
            </summary>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnBeforeBrowse(CefSharp.IWebBrowser,CefSharp.IRequest,System.Boolean,System.Boolean)">
            <summary>
            Called before browser navigation.
            If the navigation is allowed <see cref="E:CefSharp.IWebBrowser.FrameLoadStart"/> and <see cref="E:CefSharp.IWebBrowser.FrameLoadEnd"/>
            will be called. If the navigation is canceled <see cref="E:CefSharp.IWebBrowser.LoadError"/> will be called with an ErrorCode
            value of <see cref="F:CefSharp.CefErrorCode.Aborted"/>. 
            </summary>
            <param name="browser">the browser object</param>
            <param name="request">the request object - cannot be modified in this callback</param>
            <param name="isRedirect">has the request been redirected</param>
            <param name="isMainFrame">whether the request comes from main frame or not</param>
            <returns>Return true to cancel the navigation or false to allow the navigation to proceed.</returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnCertificateError(CefSharp.IWebBrowser,CefSharp.CefErrorCode,System.String)">
            <summary>
            Called when a certificate error is thrown.
            </summary>
            <param name="browser">the browser object</param>
            <param name="errorCode">the error code for this invalid certificate</param>
            <param name="requestUrl">the url of the request for the invalid certificate</param>
            <returns>Return true to allow the invalid certificate and continue the request.</returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnPluginCrashed(CefSharp.IWebBrowser,System.String)">
            <summary>
            Called when a plugin has crashed
            </summary>
            <param name="browser">the browser object</param>
            <param name="pluginPath">path of the plugin that crashed</param>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnBeforeResourceLoad(CefSharp.IWebBrowser,CefSharp.IRequest,System.Boolean)">
            <summary>
            Called before a resource request is loaded.
            </summary>
            <param name="browser">the browser object</param>
            <param name="request">the request object - can be modified in this callback.</param>
            /// <param name="isMainFrame">whether the request comes from main frame or not</param>
            <returns>To cancel loading of the resource return true or false to allow the resource to load normally.</returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.GetAuthCredentials(CefSharp.IWebBrowser,System.Boolean,System.String,System.Int32,System.String,System.String,System.String@,System.String@)">
            <summary>
            Called when the browser needs credentials from the user.
            </summary>
            <param name="browser">the browser object</param>
            <param name="isProxy">indicates whether the host is a proxy server</param>
            <param name="host">hostname</param>
            <param name="port">port number</param>
            <param name="realm">realm</param>
            <param name="scheme">scheme</param>
            <param name="username">requested username</param>
            <param name="password">requested password</param>
            <returns>Return true to continue the request and call CefAuthCallback::Continue() when the authentication information is available. Return false to cancel the request. </returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnBeforePluginLoad(CefSharp.IWebBrowser,System.String,System.String,CefSharp.WebPluginInfo)">
            <summary>
            Called on the browser process IO thread before a plugin is loaded.
            </summary>
            <param name="browser">the browser object</param>
            <param name="url">URL</param>
            <param name="policyUrl">policy URL</param>
            <param name="info">plugin information</param>
            <returns>Return true to block loading of the plugin.</returns>
        </member>
        <member name="M:CefSharp.IRequestHandler.OnRenderProcessTerminated(CefSharp.IWebBrowser,CefSharp.CefTerminationStatus)">
            <summary>
            Called when the render process terminates unexpectedly.
            </summary>
            <param name="browser">the browser object</param>
            <param name="status">indicates how the process terminated.</param>
        </member>
        <member name="M:CefSharp.ISchemeHandler.ProcessRequestAsync(CefSharp.IRequest,CefSharp.ISchemeHandlerResponse,CefSharp.OnRequestCompletedHandler)">
            <summary>
            Processes a custom scheme-based request asynchronously. The implementing method should call the callback whenever the
            request is completed.
            </summary>
            <param name="request">The request object.</param>
            <param name="response">The SchemeHandlerResponse object in which the handler is supposed to place the response
            information.</param>
            <param name="requestCompletedCallback">A callback which the handler is supposed to call once the processing is
            complete. The callback may be called on any thread.</param>
            <returns>true if the request is handled, false otherwise.</returns>
        </member>
        <member name="P:CefSharp.ISchemeHandlerResponse.ResponseStream">
            <summary>
            A Stream with the response data. If the request didn't return any response, leave this property as null.
            </summary>
        </member>
        <member name="P:CefSharp.ISchemeHandlerResponse.StatusCode">
            <summary>
            The status code of the response. Unless set, the default value used is 200
            (corresponding to HTTP status OK).
            </summary>
        </member>
        <member name="P:CefSharp.ISchemeHandlerResponse.ContentLength">
            <summary>
            The length of the response contents. Defaults to -1, which means unknown length
            and causes CefSharp to read the response stream in pieces. Thus, setting a length
            is optional but allows for more optimal response reading.
            </summary>
        </member>
        <member name="P:CefSharp.ISchemeHandlerResponse.RedirectUrl">
            <summary>
            URL to redirect to (leave empty to not redirect).
            </summary>
        </member>
        <member name="P:CefSharp.ISchemeHandlerResponse.CloseStream">
            <summary>
            Set to true to close the response stream once it has been read. The default value
            is false in order to preserve the old CefSharp behavior of not closing the stream.
            </summary>
        </member>
        <member name="T:CefSharp.FrameLoadEndEventArgs">
            <summary>
            Event arguments to the FrameLoadEnd event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadEndEventArgs.Url">
            <summary>
            The URL that was loaded.
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadEndEventArgs.IsMainFrame">
            <summary>
            Is this the Main Frame
            </summary>
        </member>
        <member name="P:CefSharp.FrameLoadEndEventArgs.HttpStatusCode">
            <summary>
            Http Status Code
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Default">
            <summary>
            Default logging (currently Info logging)
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Verbose">
            <summary>
            Verbose logging.
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Info">
            <summary>
            Info logging
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Warning">
            <summary>
            Warning logging
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Error">
            <summary>
            Error logging
            </summary>
        </member>
        <member name="F:CefSharp.LogSeverity.Disable">
            <summary>
            Completely disable logging
            </summary>
        </member>
        <member name="T:CefSharp.StatusMessageEventArgs">
            <summary>
            Event arguments to the StatusMessage event handler set up in IWebBrowser.
            </summary>
        </member>
        <member name="P:CefSharp.StatusMessageEventArgs.Value">
            <summary>
            The value of the status message.
            </summary>
        </member>
        <member name="T:CefSharp.TitleChangedEventArgs">
            <summary>
            Event arguments to the TitleChanged event handler.
            </summary>
        </member>
    </members>
</doc>
